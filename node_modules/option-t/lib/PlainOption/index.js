"use strict";
/**
 *  This module provies that the Option type interface whose APIs are inspired
 *  by Rust's [`std::option::Option<T>`](https://doc.rust-lang.org/std/option/index.html).
 *
 *  We don't use a class to provides this module by these reason:
 *
 *  - Make treeshaking friendly.
 *      - Almost minifier cannot remove functions by default on `.prototype` even if they are unused.
 *  - Relax the incompatible problem by mixing multiple versions of this package
 *    in module dependency tree.
 *      - e.g. `instanceof` will be a problem. See ([#337](https://github.com/karen-irc/option-t/pull/337)).
 *
 *  And some operators might not return a new object and reuse the input
 *  to reduce an object allocation. Thus comparing _this `Option<T>`` is meaningless like a following code.
 *  This is by design because we think this pattern is meaningless.
 *
 *  ```typescript
 *      const a: Option<number> = createSome(1);
 *      const b: Option<number> = someOperator(a);
 *
 *      // Results of these comparison are undefined.
 *      a === b;
 *      Object.is(a, b);
 *  ```
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Option_1 = require("./Option");
exports.createSome = Option_1.createSome;
exports.createNone = Option_1.createNone;
exports.isSome = Option_1.isSome;
exports.isNone = Option_1.isNone;
var and_1 = require("./and");
exports.and = and_1.andForOption;
var andThen_1 = require("./andThen");
exports.andThen = andThen_1.andThenForOption;
var expect_1 = require("./expect");
exports.expect = expect_1.expectIsSome;
var filter_1 = require("./filter");
exports.filter = filter_1.filterForOption;
var flatten_1 = require("./flatten");
exports.flatten = flatten_1.flattenForOption;
var map_1 = require("./map");
exports.map = map_1.mapForOption;
var mapOr_1 = require("./mapOr");
exports.mapOr = mapOr_1.mapOrForOption;
var mapOrElse_1 = require("./mapOrElse");
exports.mapOrElse = mapOrElse_1.mapOrElseForOption;
var or_1 = require("./or");
exports.or = or_1.orForOption;
var orElse_1 = require("./orElse");
exports.orElse = orElse_1.orElseForOption;
var transpose_1 = require("./transpose");
exports.transpose = transpose_1.transposeForOption;
var tap_1 = require("./tap");
exports.tap = tap_1.tapOption;
var unwrap_1 = require("./unwrap");
exports.unwrap = unwrap_1.unwrapOption;
var unwrapOr_1 = require("./unwrapOr");
exports.unwrapOr = unwrapOr_1.unwrapOrFromOption;
var unwrapOrElse_1 = require("./unwrapOrElse");
exports.unwrapOrElse = unwrapOrElse_1.unwrapOrElseFromOption;
