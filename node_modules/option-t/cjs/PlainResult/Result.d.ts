export declare type Result<T, E> = Ok<T> | Err<E>;
export declare type Ok<T> = {
    readonly ok: true;
    readonly val: T;
    readonly err?: undefined;
};
export declare function isOk<T, E>(v: Result<T, E>): v is Ok<T>;
export declare function createOk<T>(val: T): Ok<T>;
export declare type Err<E> = {
    readonly ok: false;
    readonly val?: undefined;
    readonly err: E;
};
export declare function isErr<T, E>(v: Result<T, E>): v is Err<E>;
export declare function createErr<E>(err: E): Err<E>;
