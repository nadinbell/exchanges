import { createSome, createNone, isNone } from '../PlainOption/Option';
import { isErr, createOk, createErr } from './Result';
/**
 *  Transposes a `Result` of an `Option` into an `Option` of a `Result`.
 *
 *  - `Ok(Some(v))` -> `Some(Ok(v))`
 *  - `Ok(None)` -> `None`
 *  - `Err(e)` -> `Some(Err(e))`
 */
export function transposeForResult(self) {
    if (isErr(self)) {
        var e = self.err;
        var newErr = createErr(e);
        var r_1 = createSome(newErr);
        return r_1;
    }
    var inner = self.val;
    if (isNone(inner)) {
        var r_2 = createNone();
        return r_2;
    }
    var v = inner.val;
    var innerV = createOk(v);
    var r = createSome(innerV);
    return r;
}
