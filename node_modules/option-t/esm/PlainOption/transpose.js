import { createOk, createErr, isErr } from '../PlainResult/Result';
import { isNone, createSome, createNone } from './Option';
/**
 *  Transposes an `Option` of a `Result` into a `Result` of an `Option`.
 *
 *  - `Some(Ok(x))` -> `Ok(Some(x))`
 *  - `Some(Err(e))` -> `Err(e)`
 *  - `None` => `Ok(None)`
 */
export function transposeForOption(self) {
    if (isNone(self)) {
        var inner_1 = createNone();
        var r_1 = createOk(inner_1);
        return r_1;
    }
    var inner = self.val;
    if (isErr(inner)) {
        var e = inner.err;
        var r_2 = createErr(e);
        return r_2;
    }
    var v = inner.val;
    var some = createSome(v);
    var r = createOk(some);
    return r;
}
